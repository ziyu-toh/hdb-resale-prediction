name: Deploying AWS Lambda Functions

on:
  push:
    branches: [ "main", "retraining"]
    paths: 
      - 'modelling/retrain_best_model/**'
      - '.github/workflows/cicd_retraining.yml'

permissions:
  id-token: write   # This is required for OIDC authentication
  contents: read    # This is required to checkout the repository

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v5

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_OIDC_ROLE }}
        aws-region: ${{ secrets.AWS_REGION }}
        # The role-to-assume should be the ARN of the IAM role you created for GitHub Actions OIDC
        # The role should have a trust relationship with the GitHub OIDC provider

    - name: Build docker image for retraining and upload to AWS ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Delete previous latest image from ECR (if exists), and build and push new image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY_RETRAINING }}
        IMAGE_TAG: latest
      run: |
        # Delete previous latest image from ECR (if exists)
        aws ecr batch-delete-image --repository-name $ECR_REPOSITORY --image-ids imageTag=$IMAGE_TAG || echo "No previous image to delete"
        
        # Build Docker image from Dockerfile in repository root
        docker buildx build --platform linux/amd64 --provenance=false -f modelling/retrain_best_model/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        
        # Push the built image to ECR repository
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

        # Output the full image URI for the next step
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Update hdb-resale-retraining Lambda function
      uses: aws-actions/aws-lambda-deploy@v1.1.0
      with:
        function-name: hdb-resale-retraining
        package-type: Image
        image-uri: ${{ steps.build-image.outputs.image }}
        role: ${{ secrets.AWS_LAMBDA_EXECUTION_ROLE }}